@import com.geirsson.reavealjs.RevealJs._


@slide
  @h2
    Refactoring with scalafix and scala.meta
  @p
  @p
    - Ólafur Páll Geirsson, Scala Center @br
    @twitter
  @comment
    img(style := "border: none; width: 15%; box-shadow: none;", src:="img/scalacenter.png")
@slide
  @h2
    About me
  @ul
    @li
      Recent Master's at EPFL
    @li
      65% at Scala Center
    @li
      35% experimenting with stuff
@slide
  @h2
    scalafmt
  @p
    @img(src:="img/scalafmt-diff.png")
@slide
  @h2
    scalafix
  @p
    @img(src:="img/scalafix-diff.png")
@slide
  @h2
    Agenda
  @ol
    @li
      Motivation
    @li
      Demo
    @li
      How it works
@slide
  @h1
    1. Why?
@slide
  @h2
    Move fast and break things
@slide
  @h2
    Move fast and
    @s{break}
    refactor
    things
@slide
  @h2
    What is scalafix?
  @ul
    @li
      @fragment
      library: implement rewrites in Scala
    @li
      @fragment
      tool: integrations to run rewrites
@slide
  @h2
    IDEs
  @ul
    @li
      @fragment
      Organize imports
    @li
      @fragment
      Move class
    @li
      @fragment
      Rename
@slide
  @h2
    Scala -> Scala
@slide
  @h2
    language.postfixOps
  @p
    @img(src:="img/postfix.png")
@slide
  @h2
    Explicit types for implicit definitions
  @p
    @img(src:="img/scalafix-diff.png")
@slide
  @h2
    Function arity adaptation
  @p
    @img(src:="img/arity.png")
@slide
  @h2
    Library -> Library
@slide
  @h2
    Xor
  @p
    @img(src:="img/xor.png")
@slide
  @h2
    Functor
  @p
    @img(src:="img/functor.png")
@slide
  @h2
    2. demo
  @comment
    - Run on slick, see diff in:
      slick/src/main/scala/slick/lifted/ExtensionMethods.scala
@slide
  @h3
    Step 1:
  @hl.scala
    // sbt
    addSbtPlugin("ch.epfl.scala" % "sbt-scalafix" % "0.2.0-RC1")
    > scalafix

    // Other
    scalac -Xplugin:scalafix-nsc.jar code.scala
  @h3
    Step 2:
    @lnk("Profit", "https://github.com/olafurpg/cats/commit/79c692564c7478a8a9525ec52ddd0f2979f80689")
@slide
  @h2
    Compared with intellij-scala
  @ul
    @li
      CLI-first
    @li
      Types/Symbols from scalac
    @li
      @fragment
      I'm excited to see IntelliJ @lnk("Migrators API", "https://blog.jetbrains.com/scala/2016/11/11/intellij-idea-2016-3-rc-scala-js-scala-meta-and-more/")
@slide
  @h2
    Compared with scala-refactoring
  @ul
    @li
      Built with scala.meta, no more compiler ASTs
    @li
      CLI-first
@slide
  @h2
    3. How does scalafix work?
@slide
  @h2
    scalafix ♥️ scala.meta
  @p
    @img(width:="80%", src:="img/scalameta-sketch.jpg")
@slide
  @h2
    Summary
  @ul
    @li
      @fragment
      Move fast and automatically refactor things
    @li
      @fragment
      Everyone can rewrite!

@slide
  @(style := "text-align: left;")
  @h1
    THANK YOU
  @p
      - Visit documentation: @a(href:="https://scalacenter.github.io/scalafix/", "scalacenter.github.io/scalafix") @br
      - See slides: @selfSlides @br
      - @a(href:="http://github.com/scalacenter/scalafix", "Contribute with ideas, reporting issues and PRs.") @br
      - @a(href:="http://twitter.com/olafurpg", "Follow @olafurpg on Twitter.") @br
      - @a(href:="https://gitter.im/scalacenter/scalafix", "Chat on Gitter.") @br
